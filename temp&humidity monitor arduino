#include <SoftwareSerial.h>
#include <dht11.h>
#define RX 2
#define TX 3
#define dht_apin 11 // Analog Pin sensor is connected to
dht11 dhtObject;
String AP = "xxxxxxxx";       // AP NAME
String PASS = "xxxxxx"; // AP PASSWORD
String API = "MHOBO8TB0GYACQT4";   // Write API KEY
String HOST = "api.thingspeak.com";
String PORT = "80";
int countTrueCommand;
int countTimeCommand;
boolean found = false;
int valSensor = 1;

SoftwareSerial esp8266(RX,TX);

// Define relay control pins
const int relayPin = 4; // Change this to your actual relay pin number

void setup() {
  Serial.begin(9600);
  esp8266.begin(115200);
  sendCommand("AT", 5, "OK");
  sendCommand("AT+CWMODE=1", 5, "OK");
  sendCommand("AT+CWJAP=\"" + AP + "\",\"" + PASS + "\"", 20, "OK");

  // Initialize relay pin as an OUTPUT
  pinMode(relayPin, OUTPUT);
  // Initially, turn off the relay
  digitalWrite(relayPin, LOW);
}

void loop() {
  String temperatureValue = getTemperatureValue();
  String humidityValue = getHumidityValue();

  String getData = "GET /update?api_key=" + API + "&field1=" + temperatureValue + "&field2=" + humidityValue;
  sendCommand("AT+CIPMUX=1", 5, "OK");
  sendCommand("AT+CIPSTART=0,\"TCP\",\"" + HOST + "\"," + PORT, 15, "OK");
  sendCommand("AT+CIPSEND=0," + String(getData.length() + 4), 4, ">");
  esp8266.println(getData);
  delay(1500);
  countTrueCommand++;
  sendCommand("AT+CIPCLOSE=0", 5, "OK");

  // Check temperature and control the relay
  int temperature = temperatureValue.toInt();
  if (temperature >= 30) { // Adjust the temperature threshold as needed
    digitalWrite(relayPin, HIGH); // Turn on the relay
  } else {
    digitalWrite(relayPin, LOW); // Turn off the relay
  }
}

String getTemperatureValue() {
  dhtObject.read(dht_apin);
  Serial.print(" Temperature(C)= ");
  int temp = dhtObject.temperature;
  Serial.println(temp);
  delay(50);
  return String(temp);
}

String getHumidityValue() {
  dhtObject.read(dht_apin);
  Serial.print(" Humidity in %= ");
  int humidity = dhtObject.humidity;
  Serial.println(humidity);
  delay(50);
  return String(humidity);
}

void sendCommand(String command, int maxTime, char readReplay[]) {
  Serial.print(countTrueCommand);
  Serial.print(". at command => ");
  Serial.print(command);
  Serial.print(" ");
  while (countTimeCommand < (maxTime * 1)) {
    esp8266.println(command);
    if (esp8266.find(readReplay)) {
      found = true;
      break;
    }
    countTimeCommand++;
  }

  if (found == true) {
    Serial.println("OYI");
    countTrueCommand++;
    countTimeCommand = 0;
  }

  if (found == false) {
    Serial.println("Fail");
    countTrueCommand = 0;
    countTimeCommand = 0;
  }

  found = false;
}
